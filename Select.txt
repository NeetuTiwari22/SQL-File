Select  
1.Find the country that start with Y.
select name
from world
where name like 'Y%';
2.Find the countries that end with y.
select name from world
  where name like '%y';
3.Find the countries that contain the letter x.
select name from world
  where name like '%x%';
4.Find the countries that end with land.
select name from world
  where name like '%land';
5.Find the countries that start with C and end with ia.
select name from world
  where name LIKE 'C%ia';

-- classroom data
create database classroom;
use classroom;
CREATE TABLE classroom (
rollno int8 PRIMARY KEY,
name varchar(50) NOT NULL,
house char(12) NOT NULL,
grade char(1) );

INSERT INTO classroom (rollno, name, house, grade)
VALUES
(1, 'Sam', 'Akash', 'B'),
(2, 'Ram', 'Agni', 'A'),
(3, 'Shyam', 'Jal','B'),
(4, 'Sundar', 'Agni', 'A'),
(5, 'Ram', 'Yayu', 'B');

select * from classroom;
-- where clause
select name from classroom 
where grade = 'a';
-- bitwise operators
select name from classroom 
where grade = 'a' and rollno >3 ;

use sakila;
select * from customer;
-- order by clause
select * from customer
order by first_name desc;

-- Limit clause
select * from customer
limit 5; 

-- joins  inner joins
CREATE DATABASE join_demo;
USE join_demo;
CREATE TABLE Customer (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50)
);

INSERT INTO Customer (customer_id, name) VALUES
(1, 'Mary'),
(2, 'John'),
(3, 'Alice'),
(4, 'David');

CREATE TABLE Payment (
    payment_id INT PRIMARY KEY,
    customer_id INT,
    amount DECIMAL(8,2),
    payment_date DATE,
    FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)
);

INSERT INTO Payment (payment_id, customer_id, amount, payment_date) VALUES
(101, 1, 5.99, '2025-08-01'),
(102, 2, 9.99, '2025-08-02'),
(103, 1, 2.50, '2025-08-05'),
(104, 2, 4.50, '2025-08-07');

select * from customer;
select * from payment;
-- inner join
select c.customer_id,c.name,p.customer_id,p.payment_id,p.amount from customer c
inner join payment p 
on c.customer_id=p.customer_id;

-- left join
select c.customer_id,c.name,p.customer_id,p.payment_id,p.amount from customer c
left join payment p 
on c.customer_id=p.customer_id;

-- right join
select c.customer_id,c.name,p.customer_id,p.payment_id,p.amount from customer c
right join payment p 
on c.customer_id=p.customer_id;

-- full join
SELECT c.customer_id, c.name, p.payment_id, p.amount
FROM Customer c
LEFT JOIN Payment p ON c.customer_id = p.customer_id
UNION
SELECT c.customer_id, c.name, p.payment_id, p.amount
FROM Customer c
RIGHT JOIN Payment p ON c.customer_id = p.customer_id;
-- self join
CREATE TABLE Employee (
    emp_id INT PRIMARY KEY,
    emp_name VARCHAR(50),
    manager_id INT
);
INSERT INTO Employee VALUES
(1, 'Alice', NULL),   
(2, 'Bob', 1),        
(3, 'Charlie', 1),    
(4, 'David', 2),      
(5, 'Eva', 2);        
select * from employee;
select e.emp_name,e.emp_id employee,
m.emp_name manager
from employee e
join employee m
on e.manager_id=m.emp_id;

-- cros join
use join_demo;
select * from customer;
select * from employee;
select * from payment;
select c.name,c.customer_id,p.payment_id,p.amount
from customer as c
cross join payment as p
order by c.customer_id;
